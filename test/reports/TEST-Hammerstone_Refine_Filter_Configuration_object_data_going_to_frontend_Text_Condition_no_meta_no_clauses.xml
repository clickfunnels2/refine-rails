<?xml version="1.0" encoding="UTF-8"?>
<testsuite time='0.013021' skipped='0' failures='1' errors='0' name="Hammerstone::Refine::Filter::Configuration object - data going to frontend::Text Condition - no meta, no clauses" assertions='1' tests='1' timestamp="2022-04-14T21:03:53-07:00">
  <testcase time='0.013021' file="test/hammerstone/models/filters/basic_filter_test.rb" name="test_0001_returns correct json" assertions='1'>
    <failure type='Minitest::Assertion' message="--- expected&#13;&#10;+++ actual&#13;&#10;@@ -1 +1 @@&#13;&#10;-{:type=&gt;&quot;Hammerstone&quot;, :class_name=&gt;&quot;TestDoubleFilter&quot;, :blueprint=&gt;[], :conditions=&gt;[{:id=&gt;&quot;text_field_value&quot;, :component=&gt;&quot;text-condition&quot;, :display=&gt;&quot;Text field value&quot;, :meta=&gt;{:clauses=&gt;[{:id=&gt;&quot;eq&quot;, :display=&gt;&quot;Equals&quot;, :meta=&gt;{}}, {:id=&gt;&quot;dne&quot;, :display=&gt;&quot;Does Not Equal&quot;, :meta=&gt;{}}, {:id=&gt;&quot;sw&quot;, :display=&gt;&quot;Starts With&quot;, :meta=&gt;{}}, {:id=&gt;&quot;ew&quot;, :display=&gt;&quot;Ends With&quot;, :meta=&gt;{}}, {:id=&gt;&quot;dsw&quot;, :display=&gt;&quot;Does Not Start With&quot;, :meta=&gt;{}}, {:id=&gt;&quot;dew&quot;, :display=&gt;&quot;Does Not End With&quot;, :meta=&gt;{}}, {:id=&gt;&quot;cont&quot;, :display=&gt;&quot;Contains&quot;, :meta=&gt;{}}, {:id=&gt;&quot;dcont&quot;, :display=&gt;&quot;Does Not Contain&quot;, :meta=&gt;{}}, {:id=&gt;&quot;st&quot;, :display=&gt;&quot;Is Set&quot;, :meta=&gt;{}}, {:id=&gt;&quot;nst&quot;, :display=&gt;&quot;Is Not Set&quot;, :meta=&gt;{}}]}, :refinements=&gt;[]}], :stable_id=&gt;nil}&#13;&#10;+{:type=&gt;&quot;Hammerstone&quot;, :class_name=&gt;&quot;TestDoubleFilter&quot;, :blueprint=&gt;[], :conditions=&gt;[{:id=&gt;&quot;text_field_value&quot;, :component=&gt;&quot;text-condition&quot;, :display=&gt;&quot;Text Field Value&quot;, :meta=&gt;{:clauses=&gt;[{:id=&gt;&quot;eq&quot;, :display=&gt;&quot;Equals&quot;, :meta=&gt;{}}, {:id=&gt;&quot;dne&quot;, :display=&gt;&quot;Does Not Equal&quot;, :meta=&gt;{}}, {:id=&gt;&quot;sw&quot;, :display=&gt;&quot;Starts With&quot;, :meta=&gt;{}}, {:id=&gt;&quot;ew&quot;, :display=&gt;&quot;Ends With&quot;, :meta=&gt;{}}, {:id=&gt;&quot;dsw&quot;, :display=&gt;&quot;Does Not Start With&quot;, :meta=&gt;{}}, {:id=&gt;&quot;dew&quot;, :display=&gt;&quot;Does Not End With&quot;, :meta=&gt;{}}, {:id=&gt;&quot;cont&quot;, :display=&gt;&quot;Contains&quot;, :meta=&gt;{}}, {:id=&gt;&quot;dcont&quot;, :display=&gt;&quot;Does Not Contain&quot;, :meta=&gt;{}}, {:id=&gt;&quot;st&quot;, :display=&gt;&quot;Is Set&quot;, :meta=&gt;{}}, {:id=&gt;&quot;nst&quot;, :display=&gt;&quot;Is Not Set&quot;, :meta=&gt;{}}]}, :refinements=&gt;[]}], :stable_id=&gt;nil}&#13;&#10;">/Users/colleenschnettler/Documents/Documents/Developer/Hammerstone/refine-rails/test/hammerstone/models/filters/basic_filter_test.rb:76:in `block (4 levels) in &lt;top (required)&gt;&#39;
    </failure>
  </testcase>
</testsuite>
